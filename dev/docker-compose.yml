name: dcdev
services:
  dc-db:
    image: postgres:16
    container_name: dc-dev-db
    environment: { POSTGRES_DB: dc_dev, POSTGRES_USER: dc, POSTGRES_PASSWORD: dcpass }
    volumes: [ "./pgdata:/var/lib/postgresql/data" ]
    restart: unless-stopped

  dc-redis:
    image: redis:7
    container_name: dc-dev-redis
    command: ["redis-server","--save","60","100","--loglevel","warning"]
    volumes: [ "./redisdata:/data" ]
    restart: unless-stopped

  dc-admin:
    image: deep-calm-frontend
    container_name: dc-dev-admin
    environment:
      - HOST=0.0.0.0
    ports: [ "127.0.0.1:3000:3000" ]
    restart: unless-stopped
    depends_on: [ dc-api ]  # фронт ждёт api для стабильного старта

  dc-api:
    image: deep-calm-api
    container_name: dc-dev-api
    environment:
      DC_ENV: dev
      DC_DB_URL: postgresql://dc:dcpass@dc-db:5432/dc_dev
      DC_REDIS_URL: redis://dc-redis:6379/0
    ports: [ "127.0.0.1:8000:8000" ]
    depends_on: [ dc-db, dc-redis ]
    restart: unless-stopped
