name: Deploy Test

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

env:
  PYTHON_VERSION: "3.12"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: test
    env:
      REGISTRY_URL: ${{ secrets.DC_REGISTRY_URL }}
      REGISTRY_USER: ${{ secrets.DC_REGISTRY_USER }}
      REGISTRY_PASSWORD: ${{ secrets.DC_REGISTRY_PASSWORD }}
      TEST_SSH_HOST: ${{ secrets.DC_TEST_SSH_HOST }}
      TEST_SSH_USER: ${{ secrets.DC_TEST_SSH_USER }}
      TEST_SSH_KEY: ${{ secrets.DC_TEST_SSH_KEY }}

    steps:
      - name: Ensure required secrets are present
        run: |
          if [ -z "$REGISTRY_URL" ] || [ -z "$REGISTRY_USER" ] || [ -z "$REGISTRY_PASSWORD" ] || [ -z "$TEST_SSH_HOST" ] || [ -z "$TEST_SSH_USER" ] || [ -z "$TEST_SSH_KEY" ]; then
            echo "Missing DC_* secrets. Skipping deploy-test." >&2
            exit 1
          fi
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_URL }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}

      - name: Build and push API image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.api
          push: true
          tags: |
            ${{ env.REGISTRY_URL }}/deep-calm-api:test

      - name: Build and push Frontend image
        uses: docker/build-push-action@v5
        with:
          context: frontend
          file: Dockerfile.frontend
          push: true
          tags: |
            ${{ env.REGISTRY_URL }}/deep-calm-frontend:test

      - name: Deploy to TEST
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.TEST_SSH_HOST }}
          username: ${{ env.TEST_SSH_USER }}
          key: ${{ env.TEST_SSH_KEY }}
          script: |
            docker login ${{ env.REGISTRY_URL }} -u ${{ env.REGISTRY_USER }} -p ${{ env.REGISTRY_PASSWORD }}
            docker pull ${{ env.REGISTRY_URL }}/deep-calm-api:test
            docker pull ${{ env.REGISTRY_URL }}/deep-calm-frontend:test
            cd /opt/deep-calm/test
            pg_dump --dbname=postgresql://dc:dcpass@localhost:5432/dc_test --file=/opt/backups/dc_test_$(date +%Y%m%d%H%M%S).sql
            docker compose down
            docker compose up -d
            docker compose exec dc-test-api alembic upgrade head
