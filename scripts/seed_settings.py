#!/usr/bin/env python3
"""
DeepCalm ‚Äî Seed Initial Settings

–°–æ–∑–¥–∞–µ—Ç –Ω–∞—á–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è AI Analyst –∏ –¥—Ä—É–≥–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤.
–†–∞–±–æ—Ç–∞–µ—Ç –Ω–∞–ø—Ä—è–º—É—é —Å PostgreSQL.
"""
import psycopg2
import sys
from typing import List, Dict

# –ù–∞—á–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ–≥–ª–∞—Å–Ω–æ DEEP-CALM-MVP-BLUEPRINT.md
INITIAL_SETTINGS = [
    # –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
    {
        "key": "target_monthly_revenue_rub",
        "value": "100000",
        "value_type": "int",
        "category": "financial",
        "description": "–¶–µ–ª–µ–≤–∞—è –º–µ—Å—è—á–Ω–∞—è –≤—ã—Ä—É—á–∫–∞ (—Å–ø–∏–¥–æ–º–µ—Ç—Ä –≤ –∞–¥–º–∏–Ω–∫–µ)",
        "updated_by": "system"
    },
    {
        "key": "target_cac_rub",
        "value": "500",
        "value_type": "int",
        "category": "financial",
        "description": "–¶–µ–ª–µ–≤–æ–π CAC (–º–æ–∂–Ω–æ —É–≤–µ–ª–∏—á–∏—Ç—å –µ—Å–ª–∏ –Ω–µ —É–∫–ª–∞–¥—ã–≤–∞–µ–º—Å—è)",
        "updated_by": "system"
    },
    {
        "key": "target_roas",
        "value": "5.0",
        "value_type": "float",
        "category": "financial",
        "description": "–¶–µ–ª–µ–≤–æ–π ROAS (Return on Ad Spend): –≤—ã—Ä—É—á–∫–∞ / —Ä–∞—Å—Ö–æ–¥—ã",
        "updated_by": "system"
    },
    {
        "key": "max_daily_spend_per_channel_rub",
        "value": "2000",
        "value_type": "int",
        "category": "financial",
        "description": "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞—Å—Ö–æ–¥ –Ω–∞ –∫–∞–Ω–∞–ª –≤ –¥–µ–Ω—å",
        "updated_by": "system"
    },

    # –¶–µ–Ω—ã –Ω–∞ —É—Å–ª—É–≥–∏ (SKU)
    {
        "key": "sku_relax60_price_rub",
        "value": "3500",
        "value_type": "int",
        "category": "pricing",
        "description": "–¶–µ–Ω–∞ SKU RELAX-60",
        "updated_by": "system"
    },
    {
        "key": "sku_relax90_price_rub",
        "value": "4800",
        "value_type": "int",
        "category": "pricing",
        "description": "–¶–µ–Ω–∞ SKU RELAX-90",
        "updated_by": "system"
    },
    {
        "key": "sku_deep90_price_rub",
        "value": "4200",
        "value_type": "int",
        "category": "pricing",
        "description": "–¶–µ–Ω–∞ SKU DEEP-90",
        "updated_by": "system"
    },
    {
        "key": "sku_therapy60_price_rub",
        "value": "4200",
        "value_type": "int",
        "category": "pricing",
        "description": "–¶–µ–Ω–∞ SKU THERAPY-60",
        "updated_by": "system"
    },

    # –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –ª–∏–º–∏—Ç—ã
    {
        "key": "max_monthly_clients",
        "value": "80",
        "value_type": "int",
        "category": "operational",
        "description": "–ú–∞–∫—Å–∏–º—É–º –∫–ª–∏–µ–Ω—Ç–æ–≤ –≤ –º–µ—Å—è—Ü (–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø—Ä–∏ –ø–µ—Ä–µ–±–æ—Ä–µ)",
        "updated_by": "system"
    },
    {
        "key": "workload_capacity_hours_per_month",
        "value": "160",
        "value_type": "int",
        "category": "operational",
        "description": "–ü—Ä–æ–ø—É—Å–∫–Ω–∞—è —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å (—á–∞—Å–æ–≤/–º–µ—Å—è—Ü)",
        "updated_by": "system"
    },

    # –ê–ª–µ—Ä—Ç—ã –∏ –ø–æ—Ä–æ–≥–∏
    {
        "key": "alert_cac_threshold_rub",
        "value": "700",
        "value_type": "int",
        "category": "alerts",
        "description": "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–ª–µ—Ä—Ç –µ—Å–ª–∏ CAC –ø—Ä–µ–≤—ã—Å–∏—Ç –ø–æ—Ä–æ–≥",
        "updated_by": "system"
    },
    {
        "key": "alert_roas_threshold",
        "value": "3.0",
        "value_type": "float",
        "category": "alerts",
        "description": "–ê–ª–µ—Ä—Ç –ø—Ä–∏ ROAS < 3.0 (–æ–∫—É–ø–∞–µ–º–æ—Å—Ç—å –Ω–∏–∑–∫–∞—è)",
        "updated_by": "system"
    },
    {
        "key": "pause_campaign_if_cac_exceeds_rub",
        "value": "1000",
        "value_type": "int",
        "category": "alerts",
        "description": "–ê–≤—Ç–æ–ø–∞—É–∑–∞ –∫–∞–º–ø–∞–Ω–∏–∏ –ø—Ä–∏ CAC –≤—ã—à–µ",
        "updated_by": "system"
    },

    # AI –ø–æ–≤–µ–¥–µ–Ω–∏–µ
    {
        "key": "chatbot_confidence_threshold",
        "value": "0.70",
        "value_type": "float",
        "category": "ai",
        "description": "–ü–æ—Ä–æ–≥ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ —á–∞—Ç–±–æ—Ç–∞ (—ç—Å–∫–∞–ª–∞—Ü–∏—è –ø—Ä–∏ < 70%)",
        "updated_by": "system"
    },
    {
        "key": "creative_generation_temp",
        "value": "0.8",
        "value_type": "float",
        "category": "ai",
        "description": "Temperature –¥–ª—è GPT-4 –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫—Ä–µ–∞—Ç–∏–≤–æ–≤",
        "updated_by": "system"
    },
    {
        "key": "analyst_report_schedule_cron",
        "value": "0 9 * * MON",
        "value_type": "string",
        "category": "ai",
        "description": "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—á—ë—Ç–æ–≤ AI –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ (–∫–∞–∂–¥—ã–π –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ 9:00)",
        "updated_by": "system"
    }
]


def create_setting(cursor, setting: Dict) -> bool:
    """–°–æ–∑–¥–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫—É –≤ –ë–î"""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
        cursor.execute("SELECT key FROM settings WHERE key = %s", (setting['key'],))
        if cursor.fetchone():
            print(f"‚ö†Ô∏è  –£–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {setting['key']}")
            return True

        # –°–æ–∑–¥–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
        cursor.execute("""
            INSERT INTO settings (key, value, value_type, category, description, updated_by)
            VALUES (%s, %s, %s, %s, %s, %s)
        """, (
            setting['key'],
            setting['value'],
            setting['value_type'],
            setting['category'],
            setting['description'],
            setting['updated_by']
        ))
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞: {setting['key']}")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ {setting['key']}: {e}")
        return False


def connect_to_db():
    """–ü–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è –∫ PostgreSQL"""
    try:
        conn = psycopg2.connect(
            host="127.0.0.1",
            port="5432",
            database="dc_dev",
            user="dc",
            password="dcpass"
        )
        return conn
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î: {e}")
        return None


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ DeepCalm Settings Seeder")
    print("=" * 40)

    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î
    conn = connect_to_db()
    if not conn:
        sys.exit(1)

    try:
        cursor = conn.cursor()
        print(f"üìã –°–æ–∑–¥–∞–µ–º {len(INITIAL_SETTINGS)} –Ω–∞—á–∞–ª—å–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫...")

        success_count = 0
        for setting in INITIAL_SETTINGS:
            if create_setting(cursor, setting):
                success_count += 1

        # –ö–æ–º–º–∏—Ç–∏–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        conn.commit()

        print("=" * 40)
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ: {success_count}/{len(INITIAL_SETTINGS)}")

        if success_count < len(INITIAL_SETTINGS):
            print("‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ —Å–æ–∑–¥–∞–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ.")
            sys.exit(1)
        else:
            print("üéâ –í—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –ë–î: {e}")
        conn.rollback()
        sys.exit(1)
    finally:
        cursor.close()
        conn.close()


if __name__ == "__main__":
    main()